package com.sgs.model.entity;

import com.sgs.model.service.SGSAppModuleImpl;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 11 18:35:31 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SgsWhtGlAccImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        WhtGlId,
        SrNum,
        GlAccount,
        Text1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    private static final ADFLogger LOG = ADFLogger.createADFLogger(SgsWhtGlAccImpl.class);


    public static final int WHTGLID = AttributesEnum.WhtGlId.index();
    public static final int SRNUM = AttributesEnum.SrNum.index();
    public static final int GLACCOUNT = AttributesEnum.GlAccount.index();
    public static final int TEXT1 = AttributesEnum.Text1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SgsWhtGlAccImpl() {
    }

    /**
     * Gets the attribute value for WhtGlId, using the alias name WhtGlId.
     * @return the value of WhtGlId
     */
    public Integer getWhtGlId() {
        return (Integer) getAttributeInternal(WHTGLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhtGlId.
     * @param value value to set the WhtGlId
     */
    public void setWhtGlId(Integer value) {
        setAttributeInternal(WHTGLID, value);
    }

    /**
     * Gets the attribute value for SrNum, using the alias name SrNum.
     * @return the value of SrNum
     */
    public Integer getSrNum() {
        return (Integer) getAttributeInternal(SRNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for SrNum.
     * @param value value to set the SrNum
     */
    public void setSrNum(Integer value) {
        setAttributeInternal(SRNUM, value);
    }

    /**
     * Gets the attribute value for GlAccount, using the alias name GlAccount.
     * @return the value of GlAccount
     */
    public String getGlAccount() {
        return (String) getAttributeInternal(GLACCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlAccount.
     * @param value value to set the GlAccount
     */
    public void setGlAccount(String value) {
        setAttributeInternal(GLACCOUNT, value);
    }

    /**
     * Gets the attribute value for Text1, using the alias name Text1.
     * @return the value of Text1
     */
    public String getText1() {
        return (String) getAttributeInternal(TEXT1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Text1.
     * @param value value to set the Text1
     */
    public void setText1(String value) {
        setAttributeInternal(TEXT1, value);
    }

    /**
     * @param whtGlId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer whtGlId) {
        return new Key(new Object[] { whtGlId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sgs.model.entity.SgsWhtGlAcc");
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);        
        try {
            SGSAppModuleImpl am = new SGSAppModuleImpl();
            setWhtGlId(am.getDBSequence("SGS_WHT_GL_ACC_SEQ"));
        } catch (Exception e) {
            LOG.severe(e);
        }
    }
}

