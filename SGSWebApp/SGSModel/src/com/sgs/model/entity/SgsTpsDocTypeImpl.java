package com.sgs.model.entity;

import com.sgs.model.service.SGSAppModuleImpl;

import java.sql.Date;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Oct 14 22:14:39 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SgsTpsDocTypeImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        DocumentTypeId,
        DocumentTypeValue,
        Attachment,
        UploadDate,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        UploadedBy;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    private static final ADFLogger LOG = ADFLogger.createADFLogger(SgsIdenCombinationImpl.class);
    public static final int DOCUMENTTYPEID = AttributesEnum.DocumentTypeId.index();
    public static final int DOCUMENTTYPEVALUE = AttributesEnum.DocumentTypeValue.index();
    public static final int ATTACHMENT = AttributesEnum.Attachment.index();
    public static final int UPLOADDATE = AttributesEnum.UploadDate.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPLOADEDBY = AttributesEnum.UploadedBy.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SgsTpsDocTypeImpl() {
    }

    /**
     * Gets the attribute value for DocumentTypeId, using the alias name DocumentTypeId.
     * @return the value of DocumentTypeId
     */
    public Integer getDocumentTypeId() {
        return (Integer) getAttributeInternal(DOCUMENTTYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocumentTypeId.
     * @param value value to set the DocumentTypeId
     */
    public void setDocumentTypeId(Integer value) {
        setAttributeInternal(DOCUMENTTYPEID, value);
    }

    /**
     * Gets the attribute value for DocumentTypeValue, using the alias name DocumentTypeValue.
     * @return the value of DocumentTypeValue
     */
    public String getDocumentTypeValue() {
        return (String) getAttributeInternal(DOCUMENTTYPEVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocumentTypeValue.
     * @param value value to set the DocumentTypeValue
     */
    public void setDocumentTypeValue(String value) {
        setAttributeInternal(DOCUMENTTYPEVALUE, value);
    }

    /**
     * Gets the attribute value for Attachment, using the alias name Attachment.
     * @return the value of Attachment
     */
    public String getAttachment() {
        return (String) getAttributeInternal(ATTACHMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attachment.
     * @param value value to set the Attachment
     */
    public void setAttachment(String value) {
        setAttributeInternal(ATTACHMENT, value);
    }

    /**
     * Gets the attribute value for UploadDate, using the alias name UploadDate.
     * @return the value of UploadDate
     */
    public Date getUploadDate() {
        return (Date) getAttributeInternal(UPLOADDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UploadDate.
     * @param value value to set the UploadDate
     */
    public void setUploadDate(Date value) {
        setAttributeInternal(UPLOADDATE, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Date getUpdatedDate() {
        return (Date) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedDate.
     * @param value value to set the UpdatedDate
     */
    public void setUpdatedDate(Date value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UploadedBy, using the alias name UploadedBy.
     * @return the value of UploadedBy
     */
    public String getUploadedBy() {
        return (String) getAttributeInternal(UPLOADEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UploadedBy.
     * @param value value to set the UploadedBy
     */
    public void setUploadedBy(String value) {
        setAttributeInternal(UPLOADEDBY, value);
    }

    /**
     * @param documentTypeId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer documentTypeId) {
        return new Key(new Object[] { documentTypeId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sgs.model.entity.SgsTpsDocType");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        try {
            SGSAppModuleImpl am = new SGSAppModuleImpl();
            setDocumentTypeId(am.getDBSequence("SGS_TPADOC_TYPE_SEQ"));
        } catch (Exception e) {
            LOG.severe(e);
        }
    }
    
}

