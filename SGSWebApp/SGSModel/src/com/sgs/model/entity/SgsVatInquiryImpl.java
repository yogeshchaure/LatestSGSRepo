package com.sgs.model.entity;

import com.sgs.model.service.SGSAppModuleImpl;

import java.sql.Date;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 25 23:10:26 IST 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SgsVatInquiryImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        VatNum,
        VatId,
        ServiceProvider,
        ServiceReceiver,
        Rcm,
        ExemptSupply,
        ItemServiceCategory,
        RateOfTax,
        GlAccountCodes,
        EffectiveFrom,
        EffectiveTo,
        CreatedDate,
        CreatedBy,
        UpdatedDate,
        UpdatedBy,
        CostIdenId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    private static final ADFLogger LOG = ADFLogger.createADFLogger(SgsAccPayInvoicesImpl.class);


    public static final int VATNUM = AttributesEnum.VatNum.index();
    public static final int VATID = AttributesEnum.VatId.index();
    public static final int SERVICEPROVIDER = AttributesEnum.ServiceProvider.index();
    public static final int SERVICERECEIVER = AttributesEnum.ServiceReceiver.index();
    public static final int RCM = AttributesEnum.Rcm.index();
    public static final int EXEMPTSUPPLY = AttributesEnum.ExemptSupply.index();
    public static final int ITEMSERVICECATEGORY = AttributesEnum.ItemServiceCategory.index();
    public static final int RATEOFTAX = AttributesEnum.RateOfTax.index();
    public static final int GLACCOUNTCODES = AttributesEnum.GlAccountCodes.index();
    public static final int EFFECTIVEFROM = AttributesEnum.EffectiveFrom.index();
    public static final int EFFECTIVETO = AttributesEnum.EffectiveTo.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int COSTIDENID = AttributesEnum.CostIdenId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SgsVatInquiryImpl() {
    }

    /**
     * Gets the attribute value for VatNum, using the alias name VatNum.
     * @return the value of VatNum
     */
    public Integer getVatNum() {
        return (Integer) getAttributeInternal(VATNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for VatNum.
     * @param value value to set the VatNum
     */
    public void setVatNum(Integer value) {
        setAttributeInternal(VATNUM, value);
    }

    /**
     * Gets the attribute value for VatId, using the alias name VatId.
     * @return the value of VatId
     */
    public String getVatId() {
        return (String) getAttributeInternal(VATID);
    }

    /**
     * Sets <code>value</code> as the attribute value for VatId.
     * @param value value to set the VatId
     */
    public void setVatId(String value) {
        setAttributeInternal(VATID, value);
    }

    /**
     * Gets the attribute value for ServiceProvider, using the alias name ServiceProvider.
     * @return the value of ServiceProvider
     */
    public String getServiceProvider() {
        return (String) getAttributeInternal(SERVICEPROVIDER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ServiceProvider.
     * @param value value to set the ServiceProvider
     */
    public void setServiceProvider(String value) {
        setAttributeInternal(SERVICEPROVIDER, value);
    }

    /**
     * Gets the attribute value for ServiceReceiver, using the alias name ServiceReceiver.
     * @return the value of ServiceReceiver
     */
    public String getServiceReceiver() {
        return (String) getAttributeInternal(SERVICERECEIVER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ServiceReceiver.
     * @param value value to set the ServiceReceiver
     */
    public void setServiceReceiver(String value) {
        setAttributeInternal(SERVICERECEIVER, value);
    }

    /**
     * Gets the attribute value for Rcm, using the alias name Rcm.
     * @return the value of Rcm
     */
    public String getRcm() {
        return (String) getAttributeInternal(RCM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Rcm.
     * @param value value to set the Rcm
     */
    public void setRcm(String value) {
        setAttributeInternal(RCM, value);
    }

    /**
     * Gets the attribute value for ExemptSupply, using the alias name ExemptSupply.
     * @return the value of ExemptSupply
     */
    public String getExemptSupply() {
        return (String) getAttributeInternal(EXEMPTSUPPLY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExemptSupply.
     * @param value value to set the ExemptSupply
     */
    public void setExemptSupply(String value) {
        setAttributeInternal(EXEMPTSUPPLY, value);
    }

    /**
     * Gets the attribute value for ItemServiceCategory, using the alias name ItemServiceCategory.
     * @return the value of ItemServiceCategory
     */
    public String getItemServiceCategory() {
        return (String) getAttributeInternal(ITEMSERVICECATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemServiceCategory.
     * @param value value to set the ItemServiceCategory
     */
    public void setItemServiceCategory(String value) {
        setAttributeInternal(ITEMSERVICECATEGORY, value);
    }

    /**
     * Gets the attribute value for RateOfTax, using the alias name RateOfTax.
     * @return the value of RateOfTax
     */
    public String getRateOfTax() {
        return (String) getAttributeInternal(RATEOFTAX);
    }

    /**
     * Sets <code>value</code> as the attribute value for RateOfTax.
     * @param value value to set the RateOfTax
     */
    public void setRateOfTax(String value) {
        setAttributeInternal(RATEOFTAX, value);
    }

    /**
     * Gets the attribute value for GlAccountCodes, using the alias name GlAccountCodes.
     * @return the value of GlAccountCodes
     */
    public String getGlAccountCodes() {
        return (String) getAttributeInternal(GLACCOUNTCODES);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlAccountCodes.
     * @param value value to set the GlAccountCodes
     */
    public void setGlAccountCodes(String value) {
        setAttributeInternal(GLACCOUNTCODES, value);
    }

    /**
     * Gets the attribute value for EffectiveFrom, using the alias name EffectiveFrom.
     * @return the value of EffectiveFrom
     */
    public Date getEffectiveFrom() {
        return (Date) getAttributeInternal(EFFECTIVEFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveFrom.
     * @param value value to set the EffectiveFrom
     */
    public void setEffectiveFrom(Date value) {
        setAttributeInternal(EFFECTIVEFROM, value);
    }

    /**
     * Gets the attribute value for EffectiveTo, using the alias name EffectiveTo.
     * @return the value of EffectiveTo
     */
    public Date getEffectiveTo() {
        return (Date) getAttributeInternal(EFFECTIVETO);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveTo.
     * @param value value to set the EffectiveTo
     */
    public void setEffectiveTo(Date value) {
        setAttributeInternal(EFFECTIVETO, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Date getUpdatedDate() {
        return (Date) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedDate.
     * @param value value to set the UpdatedDate
     */
    public void setUpdatedDate(Date value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CostIdenId, using the alias name CostIdenId.
     * @return the value of CostIdenId
     */
    public String getCostIdenId() {
        return (String) getAttributeInternal(COSTIDENID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CostIdenId.
     * @param value value to set the CostIdenId
     */
    public void setCostIdenId(String value) {
        setAttributeInternal(COSTIDENID, value);
    }

    /**
     * @param vatNum key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer vatNum) {
        return new Key(new Object[] { vatNum });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.sgs.model.entity.SgsVatInquiry");
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        try {
            SGSAppModuleImpl am = new SGSAppModuleImpl();
            setVatNum(am.getDBSequence("SGS_VAT_INQUIRY_SEQ"));
        } catch (Exception e) {
            LOG.severe(e);
        }
    }
}

